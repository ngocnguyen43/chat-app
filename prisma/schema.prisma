// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Options {
  password
  passkey
  otp
  oauth
}

model User {
  id               String         @id @unique @default(uuid()) @map("user_id")
  firstName        String         @map("first_name")
  lastName         String         @map("last_name")
  email            String         @unique @db.VarChar(100)
  currentChallenge String?        @map("current_challenge")
  avatar           String?
  createdAt        DateTime       @default(now()) @map("created_at")
  updatedAt        DateTime       @updatedAt @map("updated_at")
  AuthOtions       AuthnOptions[]

  @@index([email, id])
  @@map("users")
}

model AuthnOptions {
  id     String  @id @unique @default(uuid()) @map("option_id")
  userId String  @map("user_id")
  Users  User?   @relation(fields: [userId], references: [id])
  option Options
  key    Json

  @@index([id, userId, option])
  @@map("authn_options")
}

model GroupUsers {
  id      String @id @unique @db.VarChar(36)
  userId  String @map("user_id") @db.VarChar(36)
  groupId String @map("group_id") @db.VarChar(36)
  Groups  Group  @relation(fields: [groupId], references: [id])
}

model Group {
  id           String        @id @unique @default(uuid())
  creator      String        @db.VarChar(36)
  createdAt    DateTime      @default(now()) @db.DateTime(0)
  GroupUsers   GroupUsers[]
  Conversation Conversation?
}

model Conversation {
  id            String    @id @unique @default(uuid())
  groupId       String    @unique @map("group_id") @db.VarChar(36)
  Group         Group     @relation(fields: [groupId], references: [id])
  lastMessage   String?   @db.Text
  lastMessageAt DateTime? @default(now()) @db.DateTime(0)
  creator       String?   @db.VarChar(36)
  messages      Message[]

  @@map("conversations")
}

model Message {
  id             Int          @id @default(autoincrement())
  conversationId String       @db.VarChar(36)
  from           String       @db.VarChar(32)
  message        String       @db.Text
  createdAt      DateTime     @default(now()) @db.DateTime(0)
  nah            String
  Conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)

  @@map("messages")
}
